
export proc log(x: readonly unknown) |> {
    ___log(x);
}

export func logged<T>(x: T): T => ___log(x)

export type MemoOptions = readonly {
    maxItems?: number
}

export func memo(options?: MemoOptions) => <
    TArgs extends readonly unknown[],
    TReturn
>(fn: (...args: TArgs) => readonly TReturn): (...args: TArgs) => readonly TReturn => ___memo(fn, options)

export func action<
    TArgs extends readonly unknown[]
>(pr: (...args: TArgs) |> { }): (...args: TArgs) |> { } => ___action(pr)

export func assert(condition: boolean, message?: string): Error<string?>? =>
    if condition {
        nil
    } else {
        Error(message)
    }

export type Element = 
    | string
    | {
        tag: string,
        attributes: { },
        children: Element[]
    }